#!/usr/bin/env bash

function usage() {
    echo "kubectl execuser pod [(-u|--username=)|(-n|--namespace=)|(-l|--label=)|(-c|--container-index=)|(-t|--tolerations=)|(-s|--shell=)|(-v|--verbose)|(-h|--help)]"
}

POD=${1}
USER="root"
COMMAND="sh"
NAMESPACE=$(kubectl config view --minify -o 'jsonpath={..namespace}')
SEL_LABEL="k8s-app"
CONTAINER_INDEX=0
VERBOSE=false

if [[ $# -lt 1 || $POD == -* ]]; then
    usage
    exit 1
fi

OPTS=`getopt -o u:n:l:s:c:htv -l "username:namespace:label:shell:index:help,tolerations,verbose," -n "kubectl-execuser" -- "${@:2}"`

[ $? -eq 0 ] || {
    usage
    exit 1
}

eval set -- "$OPTS"

while true; do
  case "$1" in
    -h | --help ) HELP=true; shift ;;
    -l | --label ) SEL_LABEL=${2:-$SEL_LABEL}; shift; shift ;;
    -n | --namespace ) NAMESPACE=${2:-$NAMESPACE}; shift; shift ;;
    -s | --shell ) COMMAND="${2:-$COMMAND}"; shift; shift ;;
    -u | --username ) USER=$2; shift; shift ;;
    -c | --container-index ) CONTAINER_INDEX_ARG=true; CONTAINER_INDEX=${2:-${CONTAINER_INDEX}}; shift; shift ;;
    -t | --tolerations ) ENABLE_TOLERATIONS=true; shift ;;
    -v | --verbose ) VERBOSE=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

# Print help
if [ "${HELP:-false}" = true ] ; then
    usage
    exit 0
fi

if [ "${VERBOSE:-false}" = true ] ; then
  set -x
fi

CONTAINERS="$(kubectl get po -n $NAMESPACE $POD -o "jsonpath={range .status.containerStatuses[*]}{.name}{'\n'}{end}")"
NUM_CONTAINERS=$(echo "$CONTAINERS" | wc -l)

if [ "$NUM_CONTAINERS" -gt 1 ] && [ "$CONTAINER_INDEX_ARG" != true ]; then
  echo "Container index arg missing. Defaulting to index 0."
  echo "Consider passing argument (-c|--container-index) to exec into a different container"
  echo "$CONTAINERS" | awk 'BEGIN{line=0}{printf "\t%d) %s\n", line++, $0}'
fi

EXECUSER_POD="execuser-${POD}"
EXECUSER_POD=${EXECUSER_POD:0:63}  # Truncate to 64 char

NODENAME=$( kubectl -n ${NAMESPACE} get pod ${POD} -o go-template='{{.spec.nodeName}}' )
DOCKER_CONTAINERID=$( kubectl -n ${NAMESPACE} get pod ${POD} -o go-template="{{ (index .status.containerStatuses ${CONTAINER_INDEX}).containerID }}" )
CONTAINERID=${DOCKER_CONTAINERID#*//}

if [ "$ENABLE_TOLERATIONS" = true ]; then
read -r -d '' TOLERATIONS << EOF
        "tolerations": [
          {
               "key": "node-role.kubernetes.io/master"
          }
        ],
EOF
fi

read -r -d '' CONTAINER_SPEC << EOF
{
    "apiVersion": "v1",
    "metadata": {
    "labels": {
        "k8s-app": "execuser",
        "run": "${EXECUSER_POD}"
      }
    },
    "spec": {
        "containers": [
            {
                "image": "docker",
                "name": "docker",
                "stdin": true,
                "stdinOnce": true,
                "tty": true,
                "restartPolicy": "Never",
                "resources": {
                    "limits": {
                        "cpu": "500m",
                        "memory": "50Mi"
                    },
                    "requests": {
                        "cpu": "0",
                        "memory": "0"
                    }
                },
                "args": [
                  "exec",
                  "-it",
                  "-u",
                  "${USER}",
                  "${CONTAINERID}",
                  "${COMMAND}"
                ],
                "volumeMounts": [
                    {
                        "mountPath": "/var/run/docker.sock",
                        "name": "docker"
                    }
                ]
            }
        ],
        "nodeSelector": {
          "kubernetes.io/hostname": "${NODENAME}"
        },
        ${TOLERATIONS}
        "volumes": [
            {
                "name": "docker",
                "hostPath": {
                    "path": "/var/run/docker.sock",
                    "type": "File"
                }
            }
        ]
    }
}
EOF

kubectl delete pods -n ${NAMESPACE} -l run="${EXECUSER_POD}" --grace-period 0 &>/dev/null
kubectl run -n ${NAMESPACE} -it --rm --restart=Never --image=docker --overrides="${CONTAINER_SPEC}" ${EXECUSER_POD}
